<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picNotification.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAA9gAAAPYAF6eEWN
        AAAFUElEQVRYR81XWUhdZxCOWpdgXHOj5rpLjAkaURHRRuMacSsiXrWBGKFg6/agpT64xQfxoakKviQE
        Qa0+RVERDUHqvmCKkSJVmj64IEbRxOUh7st05odTrveO3qO0tAMf5/zf+f9/5szynzlXAOB/A5aUi9bW
        1jvBwcGgp6cH/v7+0NDQ4MfNkwuWlIOhoSFrAwOD31xcXKC6uho8PT1xtytTHR0dbtx8OWBJOcjLy/uW
        PNLe3o5DgOHhYTA2NoaUlJRSac5FwZJykJ+f/42+vj60tLTgEGBwcFCE6/Hjxz9Icy4KltSFsbExc5VK
        9RTDAnZ2dlBeXg5OTk4UJnj48OFPfX19Cm6dLrDkecjNzc1Cpb+TYnNzc/D29oawsDCIiIgAR0dH4R3K
        nYyMjO8nJye/4PY4CyzJob+/X3H79u02MuTmzZuQmpoK3d3dsLGxAXt7e7C9vQ3oMUhPTxdGkbEODg6v
        cY4Dtx8HltTE1NSUPobhNSkgL/T29iJ9tlAyx8TECINu3Ljxy+jo6DWk2b3VwZKawBDU0saYD/Dx40ek
        dAt5LCEhQRgUEBBQhxS7tzpYUh1YLXdMTEwmbGxsYHZ2Fin5Mj8/D0qlEoyMjCaeP3/+JVKsDgksqY64
        uLgf6e2Kiorg+PgYKXlycnIi8OzZM+GdwMDAl0izOiSwpDrc3Nw6abO3b9/iUFvIwMPDQ6GYk+npaaDz
        CD30BoesDgksKYEq6Pr16wOWlpbw4cMHpLTlLCMk2dzcFJ8KMzOzkba2tltIsboILCmhpqYmytDQEBIT
        E2F3dxcp3aJpHHkNT2tx/pSVlamQYnURWFJCVlZWDoWIPoRHR0dI6RYpVyShMDY1NYm8SU5OfooUq4vA
        khKkkm5sbBTG6AoJiaYxdN/T0yOM8fHx+RkpVheBJSV4eHi00iZdXV2yK4kzmJKf9nF1de3AIauLwJIS
        6NSlSsAT+EJlrS5kHJ03V69eFRWFhpkgzepjSUJnZ6eblZXVkK2tLczNzbFvLEdo3fLysqgoU1NTyh9v
        pFmdLEkoLi7+Gjs5SEpKgvX1ddkJrCnk0a2tLcjMzBShys7OzkKa1cmShKCgoJe0uL6+Hvb390VpXyZU
        VNoEPGOEMffu3WtGmtXJki9evAim7xEeePD+/XvRIpBnLmMMraGXobxxdnam1vTXysrKBHykpVeLwIb6
        FjbZXfQW9D36/PmziPtFwqSeX9L9zs6OOK9oX+wOe5qbm7Vy59QAQ+KPDdEbWkD9yNLSkthMffPLCu3x
        6dMnSEtLEwYpFIq+2traMHykbQw+CLl79+4rmvjkyRNYWFgQLv4nDCGRXmplZQXwZBcGYdg6S0tLv8LH
        p43x8vJao+p59OgRrK6uIvXvCVUXVpX4XmGLuobUaWNQ1sjaqqoqUTkUY7pSJRwcHIicIdCYPEZXTU4a
        S8/pqj6X9iNQQtfV1QnvkF4tY7B6hDH29vbg6+sL9+/fh5CQENHzStfQ0FBxHxkZKUAc4cGDBxAVFSX+
        EKKjo0W+EU9j4mldeHi4WEv7+vn5/d20s8aUlJSoMFTiW3QRWFhYiN6Yrtzz84Dfvq6cnJzvtIwhzMzM
        6OOfoR3+cljTFf+nbUZGRhT4U6bEjt+GuHfv3l1DT4gDkU5VOuopBIuLi1BYWCiUoGdfjY+PW+N6O1yj
        xCbNAf8QaL2SONxfMTAwoMQu0Ehd/ylj5KKiokKFyfcHelLkFgnlAp7aZMyfBQUFZx7554El5cDd3V0c
        jLGxsaJfoVyhMf7gDXHz5YAl5WBiYuJafHy8MEACJTWFgZsvByz53wCu/AXtOQSDzkcaBwAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>